在微服务架构中，我们将系统拆分成了一个个的服务单元，各单元应用间通过服务注册与订阅的方式互相依赖。
1.服务容错保护 实现了线程隔离、断路器等一系列的服务保护功能。服务降级、服务熔断、线程隔离、请求缓存、请求合并以及服务监控
2.Docker通过“舱壁模式”实现进程的隔离，使得容器与容器之间不会互相影响。Hystrix使用该模式实现线程池的隔离，它会为每一个Hystrix命令创建
一个独立的线程池
    信号量
3.依赖隔离、服务降级在使用的时候都是一体化实现的
4.快照时间窗、请求总数下限、错误百分比下限

通过断路器，实现了自动地发现错误并将降级逻辑切换为主逻辑，减少响应延迟的效果。

当断路器打开，对主逻辑进行熔断之后，hystrix会启动一个休眠时间窗，在这个时间窗内，降级逻辑是临时的成为主逻辑，
当休眠时间窗到期，断路器将进入半开状态，释放一次请求到原来的主逻辑上，如果此次请求正常返回，
那么断路器将继续闭合，主逻辑恢复，如果这次请求依然有问题，断路器继续进入打开状态，休眠时间窗重新计时。

5.服务网关

6.测试1